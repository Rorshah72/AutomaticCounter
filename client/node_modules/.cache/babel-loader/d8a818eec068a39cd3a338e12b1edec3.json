{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutomaticCounter\\\\client\\\\src\\\\pages\\\\CounterPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useContext, useEffect } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { UseHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { Loader } from \"../components/Loader\";\nimport { CounterCard } from \"../components/CounterCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CounterPage = () => {\n  _s();\n\n  const {\n    token\n  } = useContext(AuthContext);\n  const {\n    request,\n    loading\n  } = UseHttp();\n  const [counter, setCounter] = useState({\n    serial_number: \"\",\n    type_counter: \"\"\n  });\n  const counterId = useParams().id;\n  const getCounter = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/counter/${counterId}`, 'GET', null, {\n        Autherization: `Bearer ${token}`\n      });\n      setCounter(fetched);\n    } catch (e) {}\n  }, [token, counterId, request]);\n  useEffect(() => {\n    getCounter();\n  }, [getCounter]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && counter && /*#__PURE__*/_jsxDEV(CounterCard, {\n      counter: (counter, counterId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 38\n    }, this)\n  }, void 0, false);\n};\n\n_s(CounterPage, \"lW3ez6iwptVUDyD+i7II1sxJdt8=\", false, function () {\n  return [useParams];\n});\n\n_c = CounterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterPage\");","map":{"version":3,"sources":["D:/AutomaticCounter/client/src/pages/CounterPage.js"],"names":["React","useState","useCallback","useContext","useEffect","useParams","UseHttp","AuthContext","Loader","CounterCard","CounterPage","token","request","loading","counter","setCounter","serial_number","type_counter","counterId","id","getCounter","fetched","Autherization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,UAAtC,EAAkDC,SAAlD,QAAkE,OAAlE;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,WAAR,QAA2B,2BAA3B;;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAAUR,UAAU,CAACI,WAAD,CAA1B;AACA,QAAM;AAACK,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACnCe,IAAAA,aAAa,EAAE,EADoB;AAEnCC,IAAAA,YAAY,EAAE;AAFqB,GAAD,CAAtC;AAIA,QAAMC,SAAS,GAAGb,SAAS,GAAGc,EAA9B;AAKA,QAAMC,UAAU,GAAGlB,WAAW,CAAC,YAAY;AACvC,QAAI;AAEA,YAAMmB,OAAO,GAAG,MAAMT,OAAO,CAAE,gBAAeM,SAAU,EAA3B,EAA6B,KAA7B,EAAoC,IAApC,EACzB;AACII,QAAAA,aAAa,EAAG,UAASX,KAAM;AADnC,OADyB,CAA7B;AAKAI,MAAAA,UAAU,CAACM,OAAD,CAAV;AAEH,KATD,CASC,OAAOE,CAAP,EAAU,CAAE;AAChB,GAX6B,EAW5B,CAACZ,KAAD,EAAQO,SAAR,EAAmBN,OAAnB,CAX4B,CAA9B;AAaAR,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU;AACb,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,MAAGP,OAAH,EAAW;AACP,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAA,cACM,CAACA,OAAD,IAAYC,OAAZ,iBAAuB,QAAC,WAAD;AAAa,MAAA,OAAO,GAAIA,OAAO,EAAEI,SAAb;AAApB;AAAA;AAAA;AAAA;AAAA;AAD7B,mBADJ;AAKH,CAtCM;;GAAMR,W;UAOSL,S;;;KAPTK,W","sourcesContent":["import React, {useState, useCallback, useContext, useEffect} from \"react\";\r\nimport {useParams} from 'react-router-dom'\r\nimport {UseHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {Loader} from \"../components/Loader\"\r\nimport {CounterCard} from  \"../components/CounterCard\"\r\n\r\nexport const CounterPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = UseHttp()\r\n    const [counter, setCounter] = useState({\r\n        serial_number: \"\",\r\n        type_counter: \"\",\r\n    })\r\n    const counterId = useParams().id\r\n\r\n\r\n\r\n\r\n    const getCounter = useCallback(async () => {\r\n        try {\r\n\r\n            const fetched = await request(`/api/counter/${counterId}`,'GET', null,\r\n                {\r\n                    Autherization: `Bearer ${token}`\r\n                })\r\n\r\n            setCounter(fetched)\r\n\r\n        }catch (e) {}\r\n    },[token, counterId, request])\r\n\r\n    useEffect(() => {\r\n        getCounter()\r\n    }, [getCounter])\r\n\r\n    if(loading){\r\n        return <Loader/>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            { !loading && counter && <CounterCard counter = {counter, counterId}/>}\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}