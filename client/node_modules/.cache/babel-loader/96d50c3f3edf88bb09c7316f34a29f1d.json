{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutomaticCounter\\\\client\\\\src\\\\pages\\\\BasketPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useCallback, useEffect } from \"react\";\nimport { UseHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useParams } from 'react-router-dom';\nimport { Loader } from \"../components/Loader\";\nimport { CounterList } from \"../components/CounterList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const BasketPage = () => {\n  _s();\n\n  const {\n    loading,\n    request\n  } = UseHttp();\n  const {\n    token\n  } = useContext(AuthContext);\n  const [counter, setCounter] = useState({\n    serial_number: \"\",\n    type_counter: \"\",\n    counterId: \"\"\n  });\n  const fetchCounter = useCallback(async () => {\n    try {\n      const fetched = await request(`/api/counter`, 'GET', null, {\n        Autherization: `Bearer ${token}`\n      });\n      setCounter(fetched);\n    } catch (e) {}\n  }, [token, request]);\n  useEffect(() => {\n    fetchCounter();\n  }, [fetchCounter]);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !loading && /*#__PURE__*/_jsxDEV(CounterList, {\n      counter: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }, this)\n  }, void 0, false);\n};\n\n_s(BasketPage, \"Ob6UWgv0p7RdxVEowqkMe4mdGRU=\");\n\n_c = BasketPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasketPage\");","map":{"version":3,"sources":["D:/AutomaticCounter/client/src/pages/BasketPage.js"],"names":["React","useState","useContext","useCallback","useEffect","UseHttp","AuthContext","useParams","Loader","CounterList","BasketPage","loading","request","token","counter","setCounter","serial_number","type_counter","counterId","fetchCounter","fetched","Autherization","e"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,WAArC,EAAkDC,SAAlD,QAAkE,OAAlE;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAE5B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAqBP,OAAO,EAAlC;AACA,QAAM;AAACQ,IAAAA;AAAD,MAAUX,UAAU,CAACI,WAAD,CAA1B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC;AACnCe,IAAAA,aAAa,EAAE,EADoB;AAEnCC,IAAAA,YAAY,EAAE,EAFqB;AAGnCC,IAAAA,SAAS,EAAE;AAHwB,GAAD,CAAtC;AAMA,QAAMC,YAAY,GAAGhB,WAAW,CAAE,YAAY;AAC1C,QAAI;AAEA,YAAMiB,OAAO,GAAG,MAAMR,OAAO,CAAE,cAAF,EAAgB,KAAhB,EAAuB,IAAvB,EACzB;AACIS,QAAAA,aAAa,EAAG,UAASR,KAAM;AADnC,OADyB,CAA7B;AAKAE,MAAAA,UAAU,CAACK,OAAD,CAAV;AAGH,KAVD,CAUC,OAAOE,CAAP,EAAU,CAAE;AAChB,GAZ+B,EAY9B,CAACT,KAAD,EAAQD,OAAR,CAZ8B,CAAhC;AAcAR,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,YAAY;AACf,GAFQ,EAEP,CAACA,YAAD,CAFO,CAAT;;AAKA,MAAGR,OAAH,EAAY;AACR,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBACI;AAAA,cACK,CAACA,OAAD,iBAAY,QAAC,WAAD;AAAa,MAAA,OAAO,EAAKG;AAAzB;AAAA;AAAA;AAAA;AAAA;AADjB,mBADJ;AAKH,CArCM;;GAAMJ,U;;KAAAA,U","sourcesContent":["import React, {useState, useContext, useCallback, useEffect} from \"react\";\r\nimport {UseHttp} from \"../hooks/http.hook\"\r\nimport {AuthContext} from \"../context/AuthContext\"\r\nimport {useParams} from 'react-router-dom'\r\nimport {Loader} from \"../components/Loader\"\r\nimport {CounterList} from \"../components/CounterList\"\r\n\r\nexport const BasketPage = () => {\r\n\r\n    const {loading, request} = UseHttp()\r\n    const {token} = useContext(AuthContext)\r\n    const [counter, setCounter] = useState({\r\n        serial_number: \"\",\r\n        type_counter: \"\",\r\n        counterId: \"\"\r\n    })\r\n\r\n    const fetchCounter = useCallback( async () => {\r\n        try {\r\n\r\n            const fetched = await request(`/api/counter`,'GET', null,\r\n                {\r\n                    Autherization: `Bearer ${token}`\r\n                })\r\n\r\n            setCounter(fetched)\r\n\r\n\r\n        }catch (e) {}\r\n    },[token, request] )\r\n\r\n    useEffect(() => {\r\n        fetchCounter()\r\n    },[fetchCounter])\r\n\r\n\r\n    if(loading) {\r\n        return <Loader/>\r\n    }\r\n    return(\r\n        <>\r\n            {!loading && <CounterList counter = { counter }/>}\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}