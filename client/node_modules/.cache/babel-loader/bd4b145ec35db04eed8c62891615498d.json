{"ast":null,"code":"var _jsxFileName = \"D:\\\\AutomaticCounter\\\\client\\\\src\\\\pages\\\\CreateStatsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { UseHttp } from \"../hooks/http.hook\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { UseMessage } from \"../hooks/message.hook\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateStatsPage = () => {\n  _s();\n\n  const statsId = useParams().id;\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const {\n    request,\n    loading,\n    error,\n    clearError\n  } = UseHttp();\n  const message = UseMessage();\n  const [form, setForm] = useState({\n    indicator: '',\n    counterId: ''\n  });\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n  useEffect(() => {\n    message(error);\n    clearError();\n  }, [error, message, clearError]);\n\n  const changeHandler = event => {\n    setForm({ ...form,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const createHandler = async event => {\n    try {\n      setForm({ ...form,\n        counterId: statsId\n      });\n      const data = await request('/api/stats/generate', 'POST', { ...form\n      }, {\n        Autherization: `Bearer ${auth.token}`\n      });\n      history.push(`/counter/${data.counter._id}`);\n    } catch (e) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \".col.s6.offset-s3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Automatic Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card grey darken-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content red-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            children: \"Create Counter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-field \",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043F\\u043E\\u043A\\u0430\\u0437\\u043D\\u0438\\u043A \\u043B\\u0456\\u0447\\u0438\\u043B\\u044C\\u043D\\u0438\\u043A\\u0430\",\n                id: \"indicator\",\n                type: \"text\",\n                name: \"indicator\",\n                className: \"red-input\",\n                value: form.indicator,\n                onChange: changeHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"indicator\",\n                children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u043D\\u0438\\u043A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-action\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn yellow darken-4\",\n            style: {\n              marginRight: 10\n            },\n            onClick: createHandler,\n            disabled: loading,\n            children: \"\\u041F\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043F\\u043E\\u043A\\u0430\\u0437\\u043D\\u0438\\u043A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateStatsPage, \"B7Zo7iTvjBSO/eW1X8pjLNX0YeU=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = CreateStatsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateStatsPage\");","map":{"version":3,"sources":["D:/AutomaticCounter/client/src/pages/CreateStatsPage.js"],"names":["React","useState","useEffect","useContext","UseHttp","AuthContext","UseMessage","useHistory","useParams","CreateStatsPage","statsId","id","history","auth","request","loading","error","clearError","message","form","setForm","indicator","counterId","window","M","updateTextFields","changeHandler","event","target","name","value","createHandler","data","Autherization","token","push","counter","_id","e","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,UAApC,QAAqD,OAArD;AACA,SAAQC,OAAR,QAAsB,oBAAtB;AACA,SAAQC,WAAR,QAA0B,wBAA1B;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,UAAR,EAAoBC,SAApB,QAAoC,kBAApC;;AAGA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAEjC,QAAMC,OAAO,GAAIF,SAAS,GAAGG,EAA7B;AACA,QAAMC,OAAO,GAAGL,UAAU,EAA1B;AACA,QAAMM,IAAI,GAAGV,UAAU,CAACE,WAAD,CAAvB;AACA,QAAM;AAACS,IAAAA,OAAD;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA;AAA1B,MAAwCb,OAAO,EAArD;AACA,QAAMc,OAAO,GAAGZ,UAAU,EAA1B;AAGA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC;AAC7BoB,IAAAA,SAAS,EAAE,EADkB;AAE7BC,IAAAA,SAAS,EAAE;AAFkB,GAAD,CAAhC;AAMApB,EAAAA,SAAS,CAAC,MAAM;AAEVqB,IAAAA,MAAM,CAACC,CAAP,CAASC,gBAAT;AACN,GAHS,EAGR,EAHQ,CAAT;AAMAvB,EAAAA,SAAS,CAAE,MAAM;AACbgB,IAAAA,OAAO,CAACF,KAAD,CAAP;AACAC,IAAAA,UAAU;AAEb,GAJQ,EAIN,CAACD,KAAD,EAAQE,OAAR,EAAgBD,UAAhB,CAJM,CAAT;;AAMA,QAAMS,aAAa,GAAGC,KAAK,IAAI;AAC3BP,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAW,OAACQ,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA7C,KAAD,CAAP;AACH,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAMJ,KAAN,IAAe;AACjC,QAAI;AACAP,MAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWG,QAAAA,SAAS,EAAEZ;AAAtB,OAAD,CAAP;AAEA,YAAMsB,IAAI,GAAG,MAAMlB,OAAO,CAAC,qBAAD,EAAwB,MAAxB,EAAgC,EAAC,GAAGK;AAAJ,OAAhC,EAA2C;AAAGc,QAAAA,aAAa,EAAG,UAASpB,IAAI,CAACqB,KAAM;AAAvC,OAA3C,CAA1B;AACAtB,MAAAA,OAAO,CAACuB,IAAR,CAAc,YAAWH,IAAI,CAACI,OAAL,CAAaC,GAAI,EAA1C;AACH,KALD,CAKC,OAAOC,CAAP,EAAU,CAAE;AAEhB,GARD;;AAaJ,sBACQ;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAE,mBAAhB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,mCAEI;AAAK,cAAA,SAAS,EAAC,cAAf;AAAA,sCACI;AACI,gBAAA,WAAW,EAAC,0JADhB;AAEI,gBAAA,EAAE,EAAC,WAFP;AAGI,gBAAA,IAAI,EAAC,MAHT;AAII,gBAAA,IAAI,EAAE,WAJV;AAKI,gBAAA,SAAS,EAAE,WALf;AAMI,gBAAA,KAAK,EAAEnB,IAAI,CAACE,SANhB;AAOI,gBAAA,QAAQ,EAAGK;AAPf;AAAA;AAAA;AAAA;AAAA,sBADJ,eAUI;AAAO,gBAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAoBI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AACI,YAAA,SAAS,EAAE,qBADf;AAEI,YAAA,KAAK,EAAE;AAACa,cAAAA,WAAW,EAAE;AAAd,aAFX;AAGI,YAAA,OAAO,EAAER,aAHb;AAII,YAAA,QAAQ,EAAEhB,OAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AAwCC,CApFM;;GAAMN,e;UAEQD,S,EACDD,U;;;KAHPE,e","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\r\nimport {UseHttp} from \"../hooks/http.hook\"\r\nimport {AuthContext} from \"../context/AuthContext\"\r\nimport {UseMessage} from \"../hooks/message.hook\"\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\n\r\n\r\nexport const CreateStatsPage = () => {\r\n\r\n    const statsId =  useParams().id\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const {request, loading, error, clearError} = UseHttp()\r\n    const message = UseMessage()\r\n\r\n\r\n    const [form, setForm] = useState({\r\n        indicator: '',\r\n        counterId: ''\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n          window.M.updateTextFields()\r\n   },[])\r\n\r\n\r\n    useEffect( () => {\r\n        message(error)\r\n        clearError()\r\n\r\n    }, [error, message,clearError])\r\n\r\n    const changeHandler = event => {\r\n        setForm({ ...form, [event.target.name]: event.target.value })\r\n    }\r\n\r\n    const createHandler = async event => {\r\n        try {\r\n            setForm({ ...form, counterId: statsId})\r\n            \r\n            const data = await request('/api/stats/generate', 'POST', {...form}, {  Autherization: `Bearer ${auth.token}`})\r\n            history.push(`/counter/${data.counter._id}`)\r\n        }catch (e) {}\r\n\r\n    }\r\n\r\n\r\n\r\n\r\nreturn(\r\n        <div className = \"row\">\r\n            <div className= \".col.s6.offset-s3\">\r\n                <h1>Automatic Counter</h1>\r\n                <div className=\"card grey darken-3\">\r\n                    <div className=\"card-content red-text\">\r\n                        <span className=\"card-title\">Create Counter</span>\r\n                        <div>\r\n\r\n                            <div className=\"input-field \">\r\n                                <input\r\n                                    placeholder=\"Введіть показник лічильника\"\r\n                                    id=\"indicator\"\r\n                                    type=\"text\"\r\n                                    name= \"indicator\"\r\n                                    className= \"red-input\"\r\n                                    value={form.indicator}\r\n                                    onChange= {changeHandler}\r\n                                />\r\n                                <label htmlFor=\"indicator\">Показник</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className= \"btn yellow darken-4\"\r\n                            style={{marginRight: 10}}\r\n                            onClick={createHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            Подати показник\r\n                        </button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}